version: "3.9"
services:
  lb:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports: [ "80:80" ]
    depends_on: [ frontend1, frontend2, api ]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend1:
    build: ./frontends
    environment:
      - VITE_API_URL=http://lb/api
    expose:
      - "4173"

  frontend2:
    build: ./frontends
    environment:
      - VITE_API_URL=http://lb/api
    expose:
      - "4173"

  api:
    build: ./api
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "node", "src/health.js"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    env_file:
      - .env
    depends_on:
      - api
      - redis

  notifier:
    build: ./notifier
    env_file: .env
    depends_on:
      - redis

  db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: mayaya
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redisdata:/data

volumes:
  pgdata: {}
  redisdata: {}
