# docker-compose.yml
version: "3.9"
services:
  lb:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports: [ "80:80" ]
    depends_on: [ frontend1, frontend2, api ]
    healthcheck: { test: ["CMD", "wget", "-qO-", "http://localhost/health"], interval: 30s }

  frontend1:
    build: ./frontend
    environment: { VITE_API_URL: "http://lb/api" }

  frontend2:
    build: ./frontend
    environment: { VITE_API_URL: "http://lb/api" }

  api:
    build: ./api
    env_file: .env
    depends_on: [ db, redis ]
    healthcheck: { test: ["CMD", "node", "src/health.js"], interval: 30s }

  worker:
    build: ./worker
    env_file: .env
    depends_on: [ api, redis ]

  notifier:
    build: ./notifier
    env_file: .env
    depends_on: [ redis ]

  db:
    image: postgres:16-alpine
    restart: always
    environment: { POSTGRES_PASSWORD: postgres }
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck: { test: ["CMD", "pg_isready", "-U", "postgres"], interval: 30s }

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes: [ redisdata:/data ]

volumes: { pgdata: {}, redisdata: {} }
